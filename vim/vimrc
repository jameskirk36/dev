set nu
set tabstop=3
source ~/.vim/syntax/scala.vim
syntax on

" GVIM specific settings
if has("gui_running")
	set lines=70 columns=150
	source $VIMRUNTIME/mswin.vim
	set guifont=Lucida_Console:h11
	colorscheme slate
end
	
" Searching 
set incsearch " enable incremental search highlighting
set hlsearch " highlight search results 
hi Search guibg=Purple 
hi Search guifg=White

" Key mappings 
let mapleader="-"
" ===================================
" ======== ALL MODE MAPPINGS ========
" ===================================
" Disable the left,right,up,down arrows 
noremap <left> <nop>
noremap <right> <nop>
noremap <up> <nop>
noremap <down> <nop>
" ===================================
" ===== NORMAL MODE MAPPINGS ========
" ===================================

" Open vim rc file
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
" Apply recently changed vimrc
nnoremap <leader>sv :source $MYVIMRC<cr>
" get out of highlighted search
nnoremap <CR> :nohlsearch<CR><CR>

" ===================================
" ===== VISUAL MODE MAPPINGS ========
" ===================================

" Wrap visual selection in user provided arguments
command! -nargs=* VisualWrap call WrapFunc(<f-args>)
function! WrapFunc(start, end)
	execute "normal `<i" . a:start . "\<esc>`>la" . a:end . "\<esc>"
endfunction

vnoremap <leader>vw <esc>:VisualWrap<space>
" ===================================
" ===== INSERT MODE MAPPINGS ========
" ===================================

" replace @@<space> with email (when in insert mode) 
iabbrev @@ james.kirk84@gmail.com

" language specific comment-line 
autocmd FileType ruby,python nnoremap <buffer> <leader>cl I#<esc>
autocmd FileType cpp,cs,javascript,scala nnoremap <buffer> <leader>cl I//<esc>
" language specific comment-visual selection
autocmd FileType cpp,cs,javascript,scala vnoremap <buffer> <leader>cv <esc>`<i/*<esc>`>2la*/<esc>

" csharp commands
iabbrev <buffer> iff if ()<cr>{<cr>}<up><up><right><right><right>

" language specific comment-line 
augroup commenting
	" clear autocommands in group
	autocmd! 
	autocmd FileType ruby,python nnoremap <buffer> <leader>cl I#<esc>
	autocmd FileType cpp,cs,javascript,scala nnoremap <buffer> <leader>cl I//<esc>
	" language specific comment-visual selection
	autocmd FileType cpp,cs,javascript,scala vnoremap <buffer> <leader>cv <esc>`<i/*<esc>`>2la*/<esc>
augroup END
augroup RubySetup
	" clear autocommands in group
	autocmd!
	autocmd BufRead,BufNewFile *.rspec set filetype=ruby
		
	" run rspec on current file
	autocmd FileType ruby nnoremap <buffer> <leader>rt :!rspec<space><c-r>%<cr>
	" new test
	autocmd FileType ruby nnoremap <buffer> <leader>nt Idescribe<space>func<space>do<cr>end<esc>?func<cr>
augroup END


augroup OperatorMappings
	" inside heading example
	autocmd BufRead onoremap ih :<c-u>execute "normal! ?^==\\+$\r:nohlsearch\rkvg_"<cr>
augroup END

